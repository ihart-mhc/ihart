/*** class : Fruits* This is a super class that will encompass all fruits (banana, apple, berry, watermelon) and creates signatures for inherited methods*/ package {	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.media.Sound;	import flash.events.*;	import flash.utils.Timer;				 public class Fruit extends MovieClip{		 //Variables				//Sound associated with given fruit		 var sound : Sound;		 //A number that corresponds with the specific fruit (0, 1, 2, 3, 4 or 5)		 var fruitNumber: int;		 		 private var myTimer:Timer;		 		 private static var sequenceLock:Boolean = false;		 
		 
		//has not yet been selected by the computer or the user
				 var isLit : Boolean;		 		 public var isDead: Boolean;		 		 //creates a new fruit. The constructor shall be overridden in each individual fruit class		 public function Fruit() {			 isLit = false;			 isDead = false;			 			}		 public function playSound(){			 sound.play();		 }		 
		 //function to light the fruit that has been selected		 public function goStop() : void {			if(!isDead){							gotoAndStop(5);			isLit = true;			}		}	
		//go back to unlit, first appearance of fruit		public function getOut() : void {			if(!isDead){			gotoAndStop(1);			isLit = false;			}		}				public function killFruit() : void {			gotoAndStop(6);			//isDead = true;		}				public function playSequenceAnimation():void{ 			if(!sequenceLock){				sequenceLock = true;				goStop();				playSound();				myTimer = new Timer(1000);				myTimer.addEventListener(TimerEvent.TIMER, pauseBeforeEndSequenceAnimation);				myTimer.start();							}		}				private function pauseBeforeEndSequenceAnimation( t : TimerEvent ) : void{				myTimer.stop();				getOut();				myTimer = new Timer(300);				myTimer.addEventListener(TimerEvent.TIMER, endSequenceAnimation);				myTimer.start();		}		private function endSequenceAnimation(t:TimerEvent):void{			myTimer.stop();			sequenceLock = false;			dispatchEvent(new Event("SequenceAnimationOver"));					}				public function isLitUp():Boolean{			return isLit;		}	 } }