package ihart.pseudo{		import flash.geom.Vector3D;	import flash.events.*;	import flash.utils.Timer;	import flash.display.MovieClip;	/**	* AutoGeneralPS	* @author Cleo Schneider	* Randomly generates rectangles (hulls) and ovals (holes)	* of different x,y,width,heights	* for several seconds and then removes them.	**/	public class AutoGeneralPS extends AbstractPseudoServer{		/**		* Fields		**/		private var timer : Timer;		private var delay : int = 500;		private var repeat : int = 0;		private var hull : MovieClip;		private var hole : MovieClip;				/**		* Constructor		**/		public function AutoGeneralPS() {			super();		}				/**		* Override the createholes function to create one hole		**/		protected override function createBlobs() : void{			timer = new Timer(delay, repeat);			timer.start();			timer.addEventListener(TimerEvent.TIMER, timerEvent);		}				/**		* Create a timer to send the holes across		* Every "delay" remove the current hole, and add		* a new one to the scene within the bounds of the 		* width and height		**/		protected function timerEvent(e : Event) : void{			hullTimer();			holeTimer();		}				protected function holeTimer() : void		{			if(hole != null){				blobHolder.removeChild(hole);			}			hole = new Circle();			hole.x = Math.random()*w;			hole.y = Math.random()*h;			hole.width = Math.random()*100;			hole.height = Math.random()*100;			//trace(hole.height);			blobHolder.addChild(hole);		}				protected function hullTimer() : void		{			if(hull != null){				blobHolder.removeChild(hull);			}			hull = new Rectangle();			hull.x = Math.random()*w;			hull.y = Math.random()*h;			hull.width = Math.random()*100;			hull.height = Math.random()*100;			//trace(hole.height);			blobHolder.addChild(hull);		}				/**		* Override updatehole to do nothing		**/		protected override function updateBlob() : void{		}				/**		* override the step function		* Every refresh, send the new hole's current position and width		**/		protected override function step(event : Event = null) : void{			var currentMessage : String = "2:";			if(hull != null){//				var currentPosition : String = "1:0," + hull.x + "Y" + hull.y + "W" + hull.width + "H" + hull.height + "T0;";				currentMessage += "0," + hull.x + "Y" + hull.y + "W" + hull.width + "H" + hull.height + "T0;";				//if the hole is within the scene send the coordinates accross				//send the current position across the server//				send(currentPosition);			}			if(hole != null){				currentMessage += "1," + hole.x + "Y" + hole.y + "W" + hole.width + "H" + hole.height + "T1;";				//currentMessage += "0," + hole.x + "Y" + hole.y + "W" + hole.width + "H" + hole.height + "T1;";//				currentPosition = "1:0," + hole.x + "Y" + hole.y + "W" + hole.width + "H" + hole.height + "T1;";				//if the hole is within the scene send the coordinates accross				//send the current position across the server				//send("2:" + currentPosition + currentPosition);//				send(currentPosition);			}			send(currentMessage);			//trace( currentMessage );		}	}}