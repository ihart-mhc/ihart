package ihart.pseudo{		import flash.geom.Vector3D;	import flash.events.*;	import flash.utils.Timer;	import flash.display.MovieClip;	/**	* HolePS	* @author Cleo Schneider	* Random width adds shapes of different width's to the screen	* for several seconds and then removes them.	**/	public class HolePS extends AbstractPseudoServer{		/**		* Fields		**/		private var timer : Timer;		private var delay : int = 500;		private var repeat : int = 0;		private var blob : MovieClip;				/**		* Constructor		**/		public function HolePS() {			super();		}				/**		* Override the createBlobs function to create one blob		**/		protected override function createBlobs() : void{			timer = new Timer(delay, repeat);			timer.start();			timer.addEventListener(TimerEvent.TIMER, timerEvent);		}				/**		* Create a timer to send the holes across		* Every "delay" remove the current blob, and add		* a new one to the scene within the bounds of the 		* width and height		**/		protected function timerEvent(e : Event) : void{			if(blob != null){				blobHolder.removeChild(blob);			}			blob = new Circle();			blob.x = Math.random()*w;			blob.y = Math.random()*h;			blob.width = Math.random()*100;			blob.height = Math.random()*100;			trace(blob.height);			blobHolder.addChild(blob);		}				/**		* Override updateBlob to do nothing		**/		protected override function updateBlob() : void{		}				/**		* override the step function		* Every refresh, send the new hole's current position and width		**/		protected override function step(event : Event = null) : void{			if(blob != null){				var currentPosition : String = "1:0," + blob.x + "Y" + blob.y + "W" + blob.width + "H" + blob.height + "T1;";				//if the blob is within the scene send the coordinates accross				//send the current position across the server				send(currentPosition);			}		}	}}