package {		public class QuestionNode {		//the question		var questionText:String;				//Possible answers array		var optionArray:Array;				//The correct answer		var correct:int;				//The did you know that fact displayed after answering the question		var didYouKnow:String;				//Children array;		var hasChildren:Boolean = false;		var childrenArray:Array;				public static function getQuestions(questionXML:XML):Array{			//Alright, since flash is evil and deleted the old code, lets get things from here.			var questionArray:Array = new Array();						for (var i:int = 0; i < questionXML.children().length(); ++i){				//Create a new question node representing this:				var temp:QuestionNode = new QuestionNode(questionXML.children()[i].@text, new Array(questionXML.children()[i].@option1, 											questionXML.children()[i].@option2, questionXML.children()[i].@option3, questionXML.children()[i].@option4),											questionXML.children()[i].@correct, questionXML.children()[i].@fact);																																										  /*				//Does this node have any children?				trace(questionXML[i].descendants("question"));*/								if (questionXML.children()[i].descendants("question").length() > 0){					var tempArray:Array = temp.processChildren(questionXML.children()[i].descendants("question"));					for (var j:int = 0; j < tempArray.length; ++j){						temp.addChildNode(tempArray[j]);					}				}				questionArray.push( temp );			}						return questionArray;		}				private function processChildren(children:XMLList):Array {			//We're using this to get the children of our current question, since there's two conflicting types here :/			var childrenArray:Array = new Array();			//Thar be children here!			for (var i:int = 0; i < 4; ++i){				var temp:QuestionNode = new QuestionNode(children[i].@text, new Array(children[i].@option1, 										children[i].@option2, children[i].@option3, children[i].@option4),										children[i].@correct, children[i].@fact);								//But does it have children...?				if (children[i].descendants().length() != 0){					var tempArray:Array = processChildren(children[i].descendants());										for (var j:int = 0; j < tempArray.length; ++j){						temp.addChildNode(tempArray[j]);					}				}								childrenArray.push(temp);			}								return childrenArray;		}				public function QuestionNode(questionText:String, optionArray:Array, correctAns:int, didYouKnow:String) {			//First we get the title from the XML object...			this.questionText = questionText;						//Now all of the options...			this.optionArray = optionArray;									//Now the correct answer...			this.correct = correctAns;						//Now the fun fact...			this.didYouKnow = didYouKnow;						//And now, the children:			childrenArray = new Array();		}				private function addChildNode(node:QuestionNode):void {			//adds given question node as a child.			hasChildren = true;			childrenArray.push(node);		}				public function nodeHasChildren():Boolean {			return hasChildren;		}				public function getChildNode(idx:int):QuestionNode {			//Returns the given child, FOR NOW WE'RE GOING TO ASSUME THAT ALL FOUR EXIST :/			return childrenArray[idx];		}				public function getQuestionText():String {			return questionText;		}				public function getButtonText(idx:int):String{			return optionArray[idx];		}				public function isCorrectGuess(guess:int):Boolean {			if (correct == guess){				return true;			}			else {				return false;			}		}				public function getFact():String {			return didYouKnow;		}				public function printNode():void {			//Prints the given node to the command line so we can see it.			trace(questionText);			for (var i:int = 0; i < optionArray.length; ++i){				trace(optionArray[i]);			}		}	}}