//Screensaver mode? D:package {	import flash.display.MovieClip;	import ihart.event.*;		public class QuizController extends MovieClip {				//set up the socket with localhost, using port 5204		var hostName:String = "localhost";//"138.110.8.61";		var port:uint = 5204;		//create a cvManager		var cv_man : CVManager = new CVManager(hostName, port);				//For starters, the view controllers that the quiz has:		var quizViewScreen:QuizViewController;		var resultViewScreen:QuizResultViewController;		var quizMainScreen:QuizMainScreen;		var finalViewScreen:QuizFinalViewController;				//The "database" which holds all of our questions		var quizDatabase:QuestionDatabaseController;			public function QuizController() {			//Initialize the result view screen (but it kinda does nothing)		}				public function initializeDatabase() {			//Initializes the database. Separate because XML takes a split second to load, and we can't do			//much without it.			createQuizDatabaseController();		}				public function initializeMainScreen():void {			createQuizMainScreen();		}				public function initializeEverythingElse():void {					//Set up the QuizViewController			createQuizViewController();		}				//Initializes the database		function createQuizDatabaseController() {			quizDatabase = new QuestionDatabaseController("quizQuestionXML", this);		}				function createQuizMainScreen(){			quizMainScreen = new QuizMainScreen(this);			quizMainScreen.initialize(cv_man);						addChild(quizMainScreen);		}				//Initialize the QuizViewController		function createQuizViewController() {			quizViewScreen = new QuizViewController(this, cv_man);						removeChild(quizMainScreen);			addChild(quizViewScreen);		}				//Initialize the ResultViewController		function createResultViewController() {			resultViewScreen = new QuizResultViewController(this, cv_man);						quizViewScreen.removeButtons();			removeChild(quizViewScreen);						addChild(resultViewScreen);		}				public function updateResultViewController(fact:String, correctAns:Boolean):void {			//...have we initialized?			if (resultViewScreen == null){				resultViewScreen = new QuizResultViewController(this, cv_man);			}						//First, remove the quizView's buttons			quizViewScreen.removeButtons();						//Now, update the result screen			resultViewScreen.updateScreen(fact, correctAns);						//And add to canvas			removeChild(quizViewScreen);			addChild(resultViewScreen);		}				public function getQuestionText():String {			return quizDatabase.getQuestionText();		}				public function getButtonText(idx:int):String {			return quizDatabase.getButtonText(idx);		}				public function answerButtonClicked(id:int):void {			//Reports when a button was clicked to the database.			quizDatabase.answerButtonClicked(id);		}				public function nextButtonClicked():void {			//Reports when the next button was clicked, meaning we should get the next question			quizDatabase.nextButtonClicked();		}				public function updateQuizView(){			//Remove buttons			resultViewScreen.remove();						//Update view			quizViewScreen.updateView();			quizViewScreen.initialize();						//Display			removeChild(resultViewScreen);			addChild(quizViewScreen);		}				public function displayFinalScreen(correctCount:int):void{			//Displays the final screen			finalViewScreen = new QuizFinalViewController(correctCount, this, cv_man);						//Remove/add buttons from/to view			resultViewScreen.remove();			finalViewScreen.displayScreen();						//Display			removeChild(resultViewScreen);			addChild(finalViewScreen);		}		function returnToMainScreen() {			//Resets the Database (nulls it)			quizDatabase = null;				removeChild(finalViewScreen);						createQuizDatabaseController();		}	}}