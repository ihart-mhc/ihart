/**FireworksCV.as@author: Barsha Shrestha, Mariam, NikitaThis program reacts to motion and paints elliptical blobs whenever motion is detected**/package {		/*next steps	1. create instrucion screen that goes away on the first movement	2. have a pop up every 30 seconds or so that gives you a color choice - if you swipe left, then one color shows up, and if you swipe right, another one shows up	3. add sound	*/	import flash.geom.Vector3D;	import flash.geom.ColorTransform;	import flash.events.*;	import flash.display.MovieClip;	import flash.display.Sprite;	import ihart.event.*;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundMixer;	public class Horses extends Sprite{				//set up the socket with localhost, using port 5204		private var hostName:String = "localhost";		//private var hostName:String = "192.168.10.1"; //hallway        private var port:uint = 5204;		//set up a cvManager to handle our CVEvents		private var cvManager : CVManager;				private var sound : int; 		private var horse1Sound: Sound;		private var horse2Sound: Sound;		private var horse3Sound: Sound;		private var horse4Sound: Sound;		//private var openMouth : openmouth; 		//create a vector of paintblobs		//private var paintblobs : Vector.<Painting> = new Vector.<Painting>();				/**		* Constructor; just initializes the cvManager and adds an event listener to it.		*/		public function Horses() : void {						cvManager = new CVManager(hostName, port);			cvManager.addEventListener(CVEvent.SHELL, getData);			horse1Sound = new Horse1;			horse2Sound = new Horse2; 			horse3Sound = new Horse3; 			horse4Sound = new Horse4; 								}				/**		* Gets data about a CVEvent and creates blobs based on that data.		*/		public function getData (e : CVEvent) : void {			trace( "getting data " );			var numBlobs : int = e.getNumBlobs();			var blobX : Number;			var blobY : Number;			fireworkX : Number;			fireworkY : Number;			var color : int;			var shape : int;			var rot :   Number;												var currentBlob : Picture1; 			//var currentStroke : testStroke;			var colorTransform: ColorTransform;						//for every blob there is on the screen			//for (var i : int = 0; i <= 5000; i++) {				currentBlob = new Picture1(); 												//this.visible = true; 				//currentStroke = new testStroke();								//save the blob's x and y values				//blobX = e.getX(i);				blobX = e.getX(0); 				blobY = e.getY(0);				trace("X value is "+ blobX);				trace("Y value is "+ blobY);													//color C in, C has 3 sections				//if(blobX>=100 && blobX<=150 &&blobY>=200 &&blobY<=250)				//{				//	color = 2;				//}				//else if(blobX>=100 && blobX<=120 &&blobY>=250 &&blobY<=350)				//{				//	color=2;				//}else if(blobX>=100 && blobX<150 &&blobY>350 &&blobY<=400)				//{				//	color=2;				//}				//				//				////color O, has 4 sections				//else if(blobX>=250 && blobX<=350 &&blobY>=200 &&blobY<=250)				//{				//	color=3;				//}				//else if(blobX>=250 && blobX<350 &&blobY>=350 &&blobY<=400)				//{				//	color=3;				//}				//else if(blobX>=250 && blobX<=280 &&blobY>=250 &&blobY<=350)				//{				//	color=3;				//}				//else if(blobX>=320 && blobX<=350 &&blobY>=250 &&blobY<=350)				//{				//	color=3;				//}								if(blobX>=000 && blobX<200 &&blobY>=0 &&blobY<=500)				{					//trace("IN HERE"); 					sound=2;										var channel2:SoundChannel = new SoundChannel(); 						channel2 = horse2Sound.play(); 						//openMouth.visible = true; 						//trace("IN open mouth" + openMouth.visible+" ********AKNDKNKJNJKNJKSDNFJKNFKJSNFJSANFJASFBJKSDFNJSKDFNJKSNFKSANFJSNGJKDFNJDFNJDFVNJSDNASDU7K6LYSDF7FKGSDUYHCKSHMKI8MBK"); 					//Horse1.visible = false; 					//horse1Sound.play(); 				}								else if(blobX>=200 && blobX<400 &&blobY>=0 &&blobY<=500)				{					sound=3;					var channel3:SoundChannel = new SoundChannel(); 						channel3 = horse3Sound.play(); 						//openMouth.visible = true; 						//trace("IN open mouth" + openMouth.visible+" ********AKNDKNKJNJKNJKSDNFJKNFKJSNFJSANFJASFBJKSDFNJSKDFNJKSNFKSANFJSNGJKDFNJDFNJDFVNJSDNASDU7K6LYSDF7FKGSDUYHCKSHMKI8MBK"); 				}				else if(blobX>=400 && blobX<600 && blobY>=0 &&blobY<=500 )				{					sound=4;					var channel4:SoundChannel = new SoundChannel(); 						channel4 = horse4Sound.play();												//openMouth.visible = true; 						//trace("IN open mouth" + openMouth.visible+" ********AKNDKNKJNJKNJKSDNFJKNFKJSNFJSANFJASFBJKSDFNJSKDFNJKSNFKSANFJSNGJKDFNJDFNJDFVNJSDNASDU7K6LYSDF7FKGSDUYHCKSHMKI8MBK"); 				}								else				{					//					//sound=5;					trace("IN CASE 6 ********AKNDKNKJNJKNJKSDNFJKNFKJSNFJSANFJASFBJKSDFNJSKDFNJKSNFKSANFJSNGJKDFNJDFNJDFVNJSDNASDU7K6LYSDF7FKGSDUYHCKSHMKI8MBK"); 										SoundMixer.stopAll();					//closedMouth.visible = true; 					//openMouth.visible = false; 									}				//generate a random color for the blob				//color = Math.ceil(Math.random() * 6);								//create a new blob with the chosen color by applying a color transform in every case 				switch (sound) {										case 1:												break;											case 2:						//colorTransform = currentblob.transform.colorTransform;						//colorTransform.color = 0x66FF33;						//currentblob.transform.colorTransform = colorTransform;						trace("IN HERE"); 												//Horse1.visible = false; 												break;											case 3:					trace("IN HERE"); 												break;											case 4:					trace("IN HERE"); 												break;										case 5:					trace("IN HERE"); 																		break;																case 6:												break;										default:												break;																																}												//add the new blob to the scene				//addChild(currentblob);				//addChild(currentStroke);				//to permanently draw the blobs on the screen				//currentblob.graphics.beginFill(0xFFFFFF);				////currentFirework.graphics.drawCircle(0, 0, 20);				//currentblob.graphics.drawRoundRect(0, 0, 10, 7, 10, 10);				//sound.play();				//currentblob.graphics.endFill();																																											//generate the new blob's x and y based on the blob's x and y				currentBlob.x =blobX;				currentBlob.y = blobY;															}		//}													}	}				